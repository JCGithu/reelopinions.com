{"version":3,"sources":["webpack:///./src/components/AuthorCard.js","webpack:///./src/templates/post.js"],"names":["AuthorCard","post","slug","className","to","primary_author","rel","name","bio","twitter","href","substring","src","alt","website","profile_image","Post","data","location","ghostPost","console","log","type","Helmet","codeinjection_styles","postTitle","title","feature_image","excerpt","updated_at_pretty","dangerouslySetInnerHTML","__html","html","primary_tag"],"mappings":"6KA6EeA,G,UAzEI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACJA,EAAKC,KAErB,OACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,uIACb,yBAAKA,UAAU,mEACb,kBAAC,OAAD,CACEC,GAAE,WAAaH,EAAKI,eAAeH,KACnCI,IAAKL,EAAKI,eAAeE,MAEzB,wBAAIJ,UAAU,6DACXF,EAAKI,eAAeE,OAGxBN,EAAKI,eAAeG,KACnB,yBAAKL,UAAU,uEACb,2BAAIF,EAAKI,eAAeG,MAG5B,yBAAKL,UAAU,8DACZF,EAAKI,eAAeI,SACnB,uBACEN,UAAU,qBACVO,KAAI,uBAAyBT,EAAKI,eAAeI,QAAQE,UACvD,IAGF,yBACER,UAAU,+BACVS,IAAI,iCACJC,IAAI,aAITZ,EAAKI,eAAeS,SACnB,uBAAGJ,KAAI,GAAKT,EAAKI,eAAeS,SAC9B,yBACEX,UAAU,+BACVS,IAAI,yBACJC,IAAI,eAMd,yBAAKV,UAAU,sFACb,yBAAKA,UAAU,qCACb,yBACES,IAAKX,EAAKI,eAAeU,cACzBZ,UAAU,2CC4CTa,UAjFF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACdjB,EAAOgB,EAAKE,UAGlB,OAFAC,QAAQC,IAAIpB,EAAKI,gBAGf,oCACE,kBAAC,IAAD,CAAUY,KAAMA,EAAMC,SAAUA,EAAUI,KAAK,YAC/C,kBAACC,EAAA,EAAD,KACE,2BAAOD,KAAK,YAAZ,GAA2BrB,EAAKuB,uBAElC,kBAAC,IAAD,CAAQC,UAAWxB,EAAKyB,OACtB,yBAAKvB,UAAU,kDACZF,EAAK0B,cACJ,4BAAQxB,UAAU,IAChB,yBACEA,UAAU,6BACVS,IAAKX,EAAK0B,cACVd,IAAKZ,EAAKyB,SAGZ,KACJ,yBAAKvB,UAAU,IACb,wBAAIA,UAAU,0JACXF,EAAKyB,SAIZ,yBAAKvB,UAAU,uBACb,6BAASA,UAAU,kBACjB,6BAASA,UAAU,4BACjB,yBAAKA,UAAU,SACZF,EAAK2B,SACJ,yBAAKzB,UAAU,kDACb,2BAAIF,EAAK2B,UAGb,yBAAKzB,UAAU,+BACf,yBAAKA,UAAU,8BACb,uBAAGA,UAAU,eAAb,KACK,IACH,kBAAC,OAAD,CACEC,GAAE,WAAaH,EAAKI,eAAeH,KACnCI,IAAKL,EAAKI,eAAeE,MAEzB,2BAAIN,EAAKI,eAAeE,MAAU,KAEpC,uBAAGJ,UAAU,WAAWF,EAAK4B,qBAIjC,6BACE1B,UAAU,2CACV2B,wBAAyB,CAAEC,OAAQ9B,EAAK+B,QAG1C,kBAAC,EAAD,CAAY/B,KAAMA,QAK1B,yBAAKE,UAAU,gEACb,yBAAKA,UAAU,SAAf,oBAAyCF,EAAKgC,YAAY1B,W","file":"component---src-templates-post-js-db9a5c52b676dac26049.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst AuthorCard = ({ post }) => {\n  const url = `/${post.slug}/`;\n\n  return (\n    <div className=\"flex justify-center\">\n      <div className=\"bg-gray-200 w-10/12 grid md:grid-cols-3 md:grid-rows-1 grid-cols-1 grid-rows-2 items-center rounded self-center px-8 py-4 shadow-lg\">\n        <div className=\"md:col-span-2 col-start-1 row-start-2 md:row-start-1 col-span-1\">\n          <Link\n            to={`/author/${post.primary_author.slug}`}\n            rel={post.primary_author.name}\n          >\n            <h1 className=\"text-2xl font-bold text-center md:text-left text-ro-black\">\n              {post.primary_author.name}\n            </h1>\n          </Link>\n          {post.primary_author.bio && (\n            <div className=\"font-quote md:text-l text-sm text-center md:text-left text-ro-dblue\">\n              <p>{post.primary_author.bio}</p>\n            </div>\n          )}\n          <div className=\"flex flex-row items-center justify-center md:justify-start\">\n            {post.primary_author.twitter && (\n              <a\n                className=\"text-sm text-white\"\n                href={`https://twitter.com/${post.primary_author.twitter.substring(\n                  1\n                )}`}\n              >\n                <img\n                  className=\"w-5 h-5 mr-1 my-1 white-fill\"\n                  src=\"/images/icons/twitter-fill.svg\"\n                  alt=\"Twitter\"\n                />\n              </a>\n            )}\n            {post.primary_author.website && (\n              <a href={`${post.primary_author.website}`}>\n                <img\n                  className=\"w-5 h-5 mr-1 my-1 white-fill\"\n                  src=\"/images/icons/link.svg\"\n                  alt=\"Website\"\n                />\n              </a>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-start-3 col-start-1 row-start-1 flex items-center justify-center\">\n          <div className=\"w-32 rounded-full overflow-hidden\">\n            <img\n              src={post.primary_author.profile_image}\n              className=\"object-cover w-full h-24 md:h-32\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nAuthorCard.propTypes = {\n  post: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    feature_image: PropTypes.string,\n    featured: PropTypes.bool,\n    excerpt: PropTypes.string.isRequired,\n    primary_author: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      profile_image: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default AuthorCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport { Layout } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\n\nimport \"@fontsource/newsreader/400.css\";\nimport AuthorCard from \"../components/AuthorCard\";\n\n/**\n * Single post view (/:slug)\n *\n * This file renders a single post and loads all the content.\n *\n */\nconst Post = ({ data, location }) => {\n  const post = data.ghostPost;\n  console.log(post.primary_author);\n\n  return (\n    <>\n      <MetaData data={data} location={location} type=\"article\" />\n      <Helmet>\n        <style type=\"text/css\">{`${post.codeinjection_styles}`}</style>\n      </Helmet>\n      <Layout postTitle={post.title}>\n        <div className=\"relative aspect-w-5 aspect-h-2 overflow-hidden\">\n          {post.feature_image ? (\n            <figure className=\"\">\n              <img\n                className=\"object-cover w-full h-full\"\n                src={post.feature_image}\n                alt={post.title}\n              />\n            </figure>\n          ) : null}\n          <div className=\"\">\n            <h1 className=\"absolute py-10 px-12 md:px-24 bottom-0 bg-gradient-to-t from-ro-black h-100 w-full text-ro-white font-bold xl:text-6xl text-3xl leading-snug shadow-md\">\n              {post.title}\n            </h1>\n          </div>\n        </div>\n        <div className=\"flex justify-center\">\n          <article className=\"w-100 md:w-3/4\">\n            <section className=\"flex justify-center mb-5\">\n              <div className=\"w-3/4\">\n                {post.excerpt && (\n                  <div className=\"font-quote text-3xl m-2 py-2 px-1 text-ro-dark\">\n                    <p>{post.excerpt}</p>\n                  </div>\n                )}\n                <div className=\"w-full h-1 bg-ro-dark my-3\"></div>\n                <div className=\"flex flex-row items-center\">\n                  <p className=\"text-ro-red\">\n                    By{\" \"}\n                    <Link\n                      to={`/author/${post.primary_author.slug}`}\n                      rel={post.primary_author.name}\n                    >\n                      <b>{post.primary_author.name}</b>{\" \"}\n                    </Link>\n                    <i className=\"text-xs\">{post.updated_at_pretty}</i>\n                  </p>\n                </div>\n                {/* The main post content */}\n                <section\n                  className=\"load-external-scripts py-8 youtube-embed\"\n                  dangerouslySetInnerHTML={{ __html: post.html }}\n                />\n                {/* Author Card */}\n                <AuthorCard post={post} />\n              </div>\n            </section>\n          </article>\n        </div>\n        <div className=\"w-100 bg-ro-black h-24 p-4 text-ro-white flex justify-center\">\n          <div className=\"w-3/4\">More articles in {post.primary_tag.name}</div>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    ghostPost: PropTypes.shape({\n      codeinjection_styles: PropTypes.object,\n      title: PropTypes.string.isRequired,\n      html: PropTypes.string.isRequired,\n      feature_image: PropTypes.string,\n      excerpt: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default Post;\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    ghostPost(slug: { eq: $slug }) {\n      ...GhostPostFields\n    }\n  }\n`;\n"],"sourceRoot":""}