{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["Tag","data","location","pageContext","tag","ghostTag","posts","allGhostPost","edges","type","className","name","description","map","node","key","id","post"],"mappings":"4FAAA,wDAyDeA,UA5CH,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACvBC,EAAMH,EAAKI,SACXC,EAAQL,EAAKM,aAAaC,MAEhC,OACE,oCACE,kBAAC,IAAD,CAAUP,KAAMA,EAAMC,SAAUA,EAAUO,KAAK,WAC/C,kBAAC,IAAD,KACE,6BACE,4BAAQC,UAAU,0BAChB,wBAAIA,UAAU,kCAAkCN,EAAIO,MACnDP,EAAIQ,YACH,uBAAGF,UAAU,iBAAiBN,EAAIQ,aAChC,MAEN,yBAAKF,UAAU,8BACb,6BAASA,UAAU,wDAChBJ,EAAMO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAET,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGlC,kBAAC,IAAD,CAAYX,YAAaA","file":"component---src-templates-tag-js-4ca0341299cd5840a16b.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout, PostCard, Pagination } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\n\n/**\n * Tag page (/tag/:slug)\n *\n * Loads all posts for the requested tag incl. pagination.\n *\n */\nconst Tag = ({ data, location, pageContext }) => {\n  const tag = data.ghostTag;\n  const posts = data.allGhostPost.edges;\n\n  return (\n    <>\n      <MetaData data={data} location={location} type=\"series\" />\n      <Layout>\n        <div>\n          <header className=\"w-100 bg-gray-200 p-10\">\n            <h1 className=\"text-ro-red text-4xl font-bold\">{tag.name}</h1>\n            {tag.description ? (\n              <p className=\"text-ro-black\">{tag.description}</p>\n            ) : null}\n          </header>\n          <div className=\"flex flex-col items-center\">\n            <section className=\"w-2/3 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n              {posts.map(({ node }) => (\n                // The tag below includes the markup for each post - components/common/PostCard.js\n                <PostCard key={node.id} post={node} />\n              ))}\n            </section>\n            <Pagination pageContext={pageContext} />\n          </div>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nTag.propTypes = {\n  data: PropTypes.shape({\n    ghostTag: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string,\n    }),\n    allGhostPost: PropTypes.object.isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  pageContext: PropTypes.object,\n};\n\nexport default Tag;\n\nexport const pageQuery = graphql`\n  query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\n    ghostTag(slug: { eq: $slug }) {\n      ...GhostTagFields\n    }\n    allGhostPost(\n      sort: { order: DESC, fields: [published_at] }\n      filter: { tags: { elemMatch: { slug: { eq: $slug } } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}